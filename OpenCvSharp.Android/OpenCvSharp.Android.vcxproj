<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0ade5c8a-5d62-42c7-873e-bc94822cc33c}</ProjectGuid>
    <Keyword>Android</Keyword>
    <RootNamespace>OpenCvSharp_Android</RootNamespace>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Android</ApplicationType>
    <ApplicationTypeRevision>3.0</ApplicationTypeRevision>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-28</AndroidAPILevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(SolutionDir)\opencv_files\opencv4100_android\include;$(LLVMToolchainPrebuiltRoot)\lib64\clang\$(LLVMVersion)\include;</IncludePath>
    <LibraryPath>$(SolutionDir)\opencv_files\opencv4100_android\lib\x86_64;$(SolutionDir)\opencv_files\3rdparty\libs\x86_64</LibraryPath>
    <OutDir>$(ProjectDir)\build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)\build\intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <IncludePath>$(SolutionDir)\opencv_files\opencv4100_android\include;$(LLVMToolchainPrebuiltRoot)\lib64\clang\$(LLVMVersion)\include;</IncludePath>
    <LibraryPath>$(SolutionDir)\opencv_files\opencv4100_android\lib\arm64-v8a;$(SolutionDir)\opencv_files\3rdparty\libs\arm64-v8a</LibraryPath>
    <OutDir>$(ProjectDir)\build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)\build\intermediate\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <OutDir>$(ProjectDir)\build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)\build\intermediate\$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(SolutionDir)\opencv_files\opencv4100_android\include;$(LLVMToolchainPrebuiltRoot)\lib64\clang\$(LLVMVersion)\include;</IncludePath>
    <LibraryPath>$(SolutionDir)\opencv_files\opencv4100_android\lib\armeabi-v7a;$(SolutionDir)\opencv_files\3rdparty\libs\armeabi-v7a</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <ExceptionHandling>Enabled</ExceptionHandling>
    </ClCompile>
    <Link>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalLibraryDirectories>$(SolutionDir)\opencv_files\opencv4100_android\lib\x86_64;$(SolutionDir)\opencv_files\3rdparty\libs\x86_64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <LibraryDependencies>IlmImf;ippicv;ippiw;ittnotify;libopenjp2;libjpeg-turbo;libpng;libprotobuf;libtiff;libwebp;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_calib3d;opencv_ccalib;opencv_core;opencv_datasets;opencv_dnn;opencv_dnn_objdetect;opencv_dnn_superres;opencv_dpm;opencv_face;opencv_features2d;opencv_flann;opencv_fuzzy;opencv_gapi;opencv_hfs;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_img_hash;opencv_intensity_transform;opencv_line_descriptor;opencv_mcc;opencv_ml;opencv_objdetect;opencv_optflow;opencv_phase_unwrapping;opencv_photo;opencv_plot;opencv_quality;opencv_rapid;opencv_reg;opencv_rgbd;opencv_saliency;opencv_shape;opencv_signal;opencv_stereo;opencv_stitching;opencv_structured_light;opencv_superres;opencv_surface_matching;opencv_text;opencv_tracking;opencv_video;opencv_videoio;opencv_videostab;opencv_wechat_qrcode;opencv_xfeatures2d;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto;m;z;mediandk;camera2ndk;%(LibraryDependencies)</LibraryDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
    </ClCompile>
    <Link>
      <LibraryDependencies>IlmImf;ittnotify;libopenjp2;libjpeg-turbo;libpng;libprotobuf;libtiff;libwebp;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_calib3d;opencv_ccalib;opencv_core;opencv_datasets;opencv_dnn;opencv_dnn_objdetect;opencv_dnn_superres;opencv_dpm;opencv_face;opencv_features2d;opencv_flann;opencv_fuzzy;opencv_gapi;opencv_hfs;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_img_hash;opencv_intensity_transform;opencv_line_descriptor;opencv_mcc;opencv_ml;opencv_objdetect;opencv_optflow;opencv_phase_unwrapping;opencv_photo;opencv_plot;opencv_quality;opencv_rapid;opencv_reg;opencv_rgbd;opencv_saliency;opencv_shape;opencv_signal;opencv_stereo;opencv_stitching;opencv_structured_light;opencv_superres;opencv_surface_matching;opencv_text;opencv_tracking;opencv_video;opencv_videoio;opencv_videostab;opencv_wechat_qrcode;opencv_xfeatures2d;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto;m;z;mediandk;camera2ndk;%(LibraryDependencies)</LibraryDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)\opencv_files\opencv4100_android\lib\arm64-v8a;$(SolutionDir)\opencv_files\3rdparty\libs\arm64-v8a;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)\opencv_files\opencv4100_android\lib\armeabi-v7a;$(SolutionDir)\opencv_files\3rdparty\libs\armeabi-v7a;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>IlmImf;ittnotify;libopenjp2;libjpeg-turbo;libpng;libprotobuf;libtiff;libwebp;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_calib3d;opencv_ccalib;opencv_core;opencv_datasets;opencv_dnn;opencv_dnn_objdetect;opencv_dnn_superres;opencv_dpm;opencv_face;opencv_features2d;opencv_flann;opencv_fuzzy;opencv_gapi;opencv_hfs;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_img_hash;opencv_intensity_transform;opencv_line_descriptor;opencv_mcc;opencv_ml;opencv_objdetect;opencv_optflow;opencv_phase_unwrapping;opencv_photo;opencv_plot;opencv_quality;opencv_rapid;opencv_reg;opencv_rgbd;opencv_saliency;opencv_shape;opencv_signal;opencv_stereo;opencv_stitching;opencv_structured_light;opencv_superres;opencv_surface_matching;opencv_text;opencv_tracking;opencv_video;opencv_videoio;opencv_videostab;opencv_wechat_qrcode;opencv_xfeatures2d;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto;m;z;mediandk;camera2ndk;%(LibraryDependencies)</LibraryDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="aruco.h" />
    <ClInclude Include="bgsegm.h" />
    <ClInclude Include="calib3d.h" />
    <ClInclude Include="calib3d_fisheye.h" />
    <ClInclude Include="calib3d_StereoMatcher.h" />
    <ClInclude Include="core.h" />
    <ClInclude Include="core_Algorithm.h" />
    <ClInclude Include="core_FileNode.h" />
    <ClInclude Include="core_FileStorage.h" />
    <ClInclude Include="core_InputArray.h" />
    <ClInclude Include="core_LDA.h" />
    <ClInclude Include="core_Mat.h" />
    <ClInclude Include="core_MatExpr.h" />
    <ClInclude Include="core_OutputArray.h" />
    <ClInclude Include="core_PCA.h" />
    <ClInclude Include="core_SparseMat.h" />
    <ClInclude Include="core_SVD.h" />
    <ClInclude Include="core_UMat.h" />
    <ClInclude Include="cuda.h" />
    <ClInclude Include="cuda_GpuMat.h" />
    <ClInclude Include="dnn.h" />
    <ClInclude Include="dnn_Net.h" />
    <ClInclude Include="dnn_superres.h" />
    <ClInclude Include="face_Facemark.h" />
    <ClInclude Include="face_FaceRecognizer.h" />
    <ClInclude Include="features2d.h" />
    <ClInclude Include="features2d_BOW.h" />
    <ClInclude Include="features2d_DescriptorMatcher.h" />
    <ClInclude Include="features2d_Feature2D.h" />
    <ClInclude Include="flann.h" />
    <ClInclude Include="flann_IndexParams.h" />
    <ClInclude Include="highgui.h" />
    <ClInclude Include="imgcodecs.h" />
    <ClInclude Include="imgproc.h" />
    <ClInclude Include="imgproc_CLAHE.h" />
    <ClInclude Include="imgproc_GeneralizedHough.h" />
    <ClInclude Include="imgproc_LineIterator.h" />
    <ClInclude Include="imgproc_LineSegmentDetector.h" />
    <ClInclude Include="imgproc_Segmentation.h" />
    <ClInclude Include="imgproc_Subdiv2D.h" />
    <ClInclude Include="img_hash.h" />
    <ClInclude Include="include_opencv.h" />
    <ClInclude Include="line_descriptor.h" />
    <ClInclude Include="ml.h" />
    <ClInclude Include="ml_ANN_MLP.h" />
    <ClInclude Include="ml_Boost.h" />
    <ClInclude Include="ml_DTrees.h" />
    <ClInclude Include="ml_EM.h" />
    <ClInclude Include="ml_KNearest.h" />
    <ClInclude Include="ml_LogisticRegression.h" />
    <ClInclude Include="ml_NormalBayesClassifier.h" />
    <ClInclude Include="ml_RTrees.h" />
    <ClInclude Include="ml_StatModel.h" />
    <ClInclude Include="ml_SVM.h" />
    <ClInclude Include="my_functions.h" />
    <ClInclude Include="my_types.h" />
    <ClInclude Include="objdetect.h" />
    <ClInclude Include="objdetect_HOGDescriptor.h" />
    <ClInclude Include="objdetect_QRCodeDetector.h" />
    <ClInclude Include="optflow.h" />
    <ClInclude Include="optflow_motempl.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="photo.h" />
    <ClInclude Include="photo_HDR.h" />
    <ClInclude Include="photo_Tonemap.h" />
    <ClInclude Include="quality.h" />
    <ClInclude Include="shape_ShapeDistanceExtractor.h" />
    <ClInclude Include="std_string.h" />
    <ClInclude Include="std_vector.h" />
    <ClInclude Include="std_vector_nesting.h" />
    <ClInclude Include="std_vector_primitive.h" />
    <ClInclude Include="stitching.h" />
    <ClInclude Include="stitching_detail_Matchers.h" />
    <ClInclude Include="superres.h" />
    <ClInclude Include="text.h" />
    <ClInclude Include="text_TextDetector.h" />
    <ClInclude Include="tracking.h" />
    <ClInclude Include="tracking_UnscentedKalmanFilter.h" />
    <ClInclude Include="video.h" />
    <ClInclude Include="videoio.h" />
    <ClInclude Include="video_background_segm.h" />
    <ClInclude Include="video_tracking.h" />
    <ClInclude Include="wechat_qrcode.h" />
    <ClInclude Include="xfeatures2d.h" />
    <ClInclude Include="ximgproc.h" />
    <ClInclude Include="ximgproc_EdgeBoxes.h" />
    <ClInclude Include="ximgproc_EdgeFilter.h" />
    <ClInclude Include="ximgproc_FastLineDetector.h" />
    <ClInclude Include="ximgproc_RidgeDetectionFilter.h" />
    <ClInclude Include="ximgproc_Segmentation.h" />
    <ClInclude Include="ximgproc_StructuredEdgeDetection.h" />
    <ClInclude Include="ximgproc_SuperPixel.h" />
    <ClInclude Include="xphoto.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="aruco.cpp" />
    <ClCompile Include="bgsegm.cpp" />
    <ClCompile Include="calib3d.cpp" />
    <ClCompile Include="core.cpp" />
    <ClCompile Include="cuda.cpp" />
    <ClCompile Include="dnn.cpp" />
    <ClCompile Include="dnn_superres.cpp" />
    <ClCompile Include="face.cpp" />
    <ClCompile Include="features2d.cpp" />
    <ClCompile Include="flann.cpp" />
    <ClCompile Include="highgui.cpp" />
    <ClCompile Include="imgcodecs.cpp" />
    <ClCompile Include="imgproc.cpp" />
    <ClCompile Include="img_hash.cpp" />
    <ClCompile Include="line_descriptor.cpp" />
    <ClCompile Include="ml.cpp" />
    <ClCompile Include="objdetect.cpp" />
    <ClCompile Include="optflow.cpp" />
    <ClCompile Include="photo.cpp" />
    <ClCompile Include="quality.cpp" />
    <ClCompile Include="shape.cpp" />
    <ClCompile Include="std_string.cpp" />
    <ClCompile Include="std_vector.cpp" />
    <ClCompile Include="stitching.cpp" />
    <ClCompile Include="superres.cpp" />
    <ClCompile Include="text.cpp" />
    <ClCompile Include="tracking.cpp" />
    <ClCompile Include="video.cpp" />
    <ClCompile Include="videoio.cpp" />
    <ClCompile Include="wechat_qrcode.cpp" />
    <ClCompile Include="xfeatures2d.cpp" />
    <ClCompile Include="ximgproc.cpp" />
    <ClCompile Include="xphoto.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>